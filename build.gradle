plugins {
    // @formatter:off
    id 'java-library'
    id 'io.freefair.lombok'                             version "$lombok_version"                  apply false
    id 'fabric-loom'                                    version "$fabric_loom_version"             apply false
    id 'io.papermc.paperweight.userdev'                 version "$paperweight_version"             apply false
    id 'xyz.jpenilla.run-paper'                         version "$run_paper_version"               apply false
    id 'xyz.jpenilla.resource-factory-paper-convention' version "$paper_yaml_version"              apply false
    id 'com.gradleup.shadow'                            version "$shadow_version"                  apply false
    id 'org.checkerframework'                           version "$checkerframework_gradle_version" apply false
    // @formatter:on
}

def java_version = Integer.parseInt("$java_version")

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'org.checkerframework'

    group = 'me.supcheg.advancedgui'
    version = '1.0.0'

    repositories {
        mavenCentral()
        maven { url = "https://repo.papermc.io/repository/maven-public/" }
        maven { url = "https://api.modrinth.com/maven" }
    }

    // tests configuration
    dependencies {
        testImplementation "org.slf4j:slf4j-simple:$slf4j_version"
        testImplementation "org.assertj:assertj-core:$assertj_version"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
        testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit_version"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
        testImplementation "org.mockito:mockito-junit-jupiter:$mockito_version"
    }

    checkerFramework {
        excludeTests = true
        checkers = ['org.checkerframework.checker.nullness.NullnessChecker']
        extraJavacArgs = ["-Astubs=${rootProject.file('.checker/stubs/')}"]
    }

    test {
        useJUnitPlatform()
    }

    java {
        toolchain.languageVersion = JavaLanguageVersion.of(java_version)
    }

    compileJava {
        options.release = java_version
    }
}